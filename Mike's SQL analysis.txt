Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10000
ii. Business table = 10000
iii. Category table = 10000
iv. Checkin table =10000
v. elite_years table = 10000
vi. friend table = 10000
vii. hours table = 10000
viii. photo table = 10000
ix. review table = 10000
x. tip table = 10000
xi. user table =10000
	


Sample Code:

Select count(*) as numrecs
From business

2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business = 10,000
ii. Hours = 1562
iii. Category = 2643
iv. Attribute = 1115
v. Review = 10,000
vi. Checkin = 493
vii. Photo = 10,000
viii. Tip = 537
ix. User = 10,000
x. Friend = 11
xi. Elite_years = 278

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	


Sample code
select count(Distinct id) + count(Distinct name) 
+ count(Distinct neighborhood) + count(Distinct address)
+ count(Distinct city) + count(Distinct state)
+ count (Distinct postal_code) + count(Distinct latitude)
+ count(Distinct longitude) + count(distinct stars)
+ count(Distinct review_count) + count(distinct is_open) AS sumz
from business



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: NO
	
	
	SQL code used to arrive at answer:
	
	select id
, name, review_count, yelping_since, useful, funny, cool, fans, average_stars
, compliment_hot, compliment_more, compliment_profile, compliment_cute, compliment_list, compliment_note, compliment_plain, compliment_cool, compliment_funny, compliment_writer, compliment_photos

from user
where id = NULL or name = NULL or review_count = NULL or yelping_since = NULL or useful = NULL or funny = NULL or cool = NULL or fans= NULL or average_stars= NULL or compliment_hot= NULL or compliment_more= NULL or compliment_profile= NULL or compliment_cute= NULL or compliment_list= NULL or compliment_note= NULL or compliment_plain = NULL or compliment_cool= NULL or compliment_funny= NULL or compliment_writer= NULL or compliment_photos= NULL;


	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min:	1	max:	5	avg: 3.7082
		
	
	ii. Table: Business, Column: Stars
	
		min:	1	max:	5	avg: 3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min:	0	max:	2	avg: 0.0144
		
	
	iv. Table: Checkin, Column: Count
	
		min:	1	max:	53	avg: 1.9414
		
	
	v. Table: User, Column: Review_count
	
		min:	0	max:	2000	avg: 24.2995
		

Sample code
select min(review_count) as Mini,
max(review_count) as Maxi,
avg(review_count) as Average
From user


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:
	
select city,
sum(review_count) as total_review
from business
group by city
order by total_review desc;
	
	Copy and Paste the Result Below:
	
+-----------------+--------------+
| city            | total_review |
+-----------------+--------------+
| Las Vegas       |        82854 |
| Phoenix         |        34503 |
| Toronto         |        24113 |
| Scottsdale      |        20614 |
| Charlotte       |        12523 |
| Henderson       |        10871 |
| Tempe           |        10504 |
| Pittsburgh      |         9798 |
| Montréal        |         9448 |
| Chandler        |         8112 |
| Mesa            |         6875 |
| Gilbert         |         6380 |
| Cleveland       |         5593 |
| Madison         |         5265 |
| Glendale        |         4406 |
| Mississauga     |         3814 |
| Edinburgh       |         2792 |
| Peoria          |         2624 |
| North Las Vegas |         2438 |
| Markham         |         2352 |
| Champaign       |         2029 |
| Stuttgart       |         1849 |
| Surprise        |         1520 |
| Lakewood        |         1465 |
| Goodyear        |         1155 |
+-----------------+--------------+
(Output limit exceeded, 25 of 362 total rows shown)	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:

SELECT stars as star_ratings, count(stars) as star_count
FROM business
WHERE city = 'Avon'
GROUP BY stars

Copy and Paste the Resulting Table Below (2 columns ñ star rating and count):


+--------------+------------+
| star_ratings | star_count |
+--------------+------------+
|          1.5 |          1 |
|          2.5 |          2 |
|          3.5 |          3 |
|          4.0 |          2 |
|          4.5 |          1 |
|          5.0 |          1 |
+--------------+------------+
+-------+--------------+


ii. Beachwood

SQL code used to arrive at answer:

SELECT stars as star_ratings, count(stars) as star_count
FROM business
WHERE city = 'Beachwood'
GROUP BY stars


Copy and Paste the Resulting Table Below (2 columns ñ star rating and count):
		
+--------------+------------+
| star_ratings | star_count |
+--------------+------------+
|          2.0 |          1 |
|          2.5 |          1 |
|          3.0 |          2 |
|          3.5 |          2 |
|          4.0 |          1 |
|          4.5 |          2 |
|          5.0 |          5 |
+--------------+------------+

7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:
	
	select
select
name
, review_count
from user
order by review_count desc
Limit 3	
	Copy and Paste the Result Below:
		
+--------+--------------+
| name   | review_count |
+--------+--------------+
| Gerald |         2000 |
| Sara   |         1629 |
| Yuri   |         1339 |
+--------+--------------+

8. Does posing more reviews correlate with more fans?

	Please explain your findings and interpretation of the results:
	
Sample code
select
name
, review_count
, fans
from user
order by review_count desc

+-----------+--------------+------+
| name      | review_count | fans |
+-----------+--------------+------+
| Gerald    |         2000 |  253 |
| Sara      |         1629 |   50 |
| Yuri      |         1339 |   76 |
| .Hon      |         1246 |  101 |
| William   |         1215 |  126 |
| Harald    |         1153 |  311 |
| eric      |         1116 |   16 |
| Roanna    |         1039 |  104 |
| Mimi      |          968 |  497 |
| Christine |          930 |  173 |
| Ed        |          904 |   38 |
| Nicole    |          864 |   43 |
| Fran      |          862 |  124 |
| Mark      |          861 |  115 |
| Christina |          842 |   85 |
| Dominic   |          836 |   37 |
| Lissa     |          834 |  120 |
| Lisa      |          813 |  159 |
| Alison    |          775 |   61 |
| Sui       |          754 |   78 |
| Tim       |          702 |   35 |
| L         |          696 |   10 |
| Angela    |          694 |  101 |
| Crissy    |          676 |   25 |
| Lyn       |          675 |   45 |
+-----------+--------------+------+

It looks like there's some correlation.

	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer: love

	
	SQL code used to arrive at answer:
select
count (*)
from review
where text like '%love%'
	
+-----------+
| count (*) |
+-----------+
|      1780 |
+-----------+


select
count (*)
from review
where text like '%hate%'


+-----------+
| count (*) |
+-----------+
|       232 |
+-----------+

	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
	
	select
name
, review_count
, fans
from user
order by fans desc
Limit 10

	Copy and Paste the Result Below:

+-----------+--------------+------+
| name      | review_count | fans |
+-----------+--------------+------+
| Amy       |          609 |  503 |
| Mimi      |          968 |  497 |
| Harald    |         1153 |  311 |
| Gerald    |         2000 |  253 |
| Christine |          930 |  173 |
| Lisa      |          813 |  159 |
| Cat       |          377 |  133 |
| William   |         1215 |  126 |
| Fran      |          862 |  124 |
| Lissa     |          834 |  120 |
+-----------+--------------+------+	
	
11. Is there a strong relationship (or correlation) between having a high number of fans and being listed as "useful" or "funny?" Out of the top 10 users with the highest number of fans, what percent are also listed as ìusefulî or ìfunnyî?

Key:
0% - 25% - Low relationship
26% - 75% - Medium relationship
76% - 100% - Strong relationship
	
	SQL code used to arrive at answer:
	
	select
name
, review_count
, fans
, funny,
useful
from user
order by fans desc
Limit 10

	Copy and Paste the Result Below:
	+-----------+--------------+------+--------+--------+
| name      | review_count | fans |  funny | useful |
+-----------+--------------+------+--------+--------+
| Amy       |          609 |  503 |   2554 |   3226 |
| Mimi      |          968 |  497 |    138 |    257 |
| Harald    |         1153 |  311 | 122419 | 122921 |
| Gerald    |         2000 |  253 |   2324 |  17524 |
| Christine |          930 |  173 |   6646 |   4834 |
| Lisa      |          813 |  159 |     13 |     48 |
| Cat       |          377 |  133 |    672 |   1062 |
| William   |         1215 |  126 |   9361 |   9363 |
| Fran      |          862 |  124 |   7606 |   9851 |
| Lissa     |          834 |  120 |    150 |    455 |
+-----------+--------------+------+--------+--------+
	
	Please explain your findings and interpretation of the results:
	

100%, every person in the top 10 number of fans was also listed as funny and useful	
	

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.

select business.name
, business.city
, category.category
, business.stars
, hours.hours
, business.review_count
, business.postal_code,
neighborhood
from (business inner join category on business.id = category.business_id) inner join hours on hours.business_id = category.business_id
where business.city = 'Las Vegas' 
 group by business.stars ;

+--------------------------------+-----------+------------------+-------+---------------------+--------------+-------------+---------------+
| name                           | city      | category         | stars | hours               | review_count | postal_code | neighborhood  |
+--------------------------------+-----------+------------------+-------+---------------------+--------------+-------------+---------------+
| Walgreens                      | Las Vegas | Beauty & Spas    |   2.5 | Saturday|8:00-22:00 |            6 | 89121       | Eastside      |
| Wingstop                       | Las Vegas | Restaurants      |   3.0 | Saturday|11:00-0:00 |          123 | 89103       |               |
| Hi Scores - Blue Diamond       | Las Vegas | Bars             |   3.5 | Saturday|0:00-0:00  |          105 | 89139       | Southwest     |
| Anthem Pediatrics              | Las Vegas | Health & Medical |   4.0 | Saturday|8:00-12:00 |           16 | 89118       | Spring Valley |
| Red Rock Canyon Visitor Center | Las Vegas | Active Life      |   4.5 | Saturday|8:00-16:30 |           32 | 89161       |               |
| Desert Medical Equipment       | Las Vegas | Shopping         |   5.0 | Monday|8:00-17:00   |            4 | 89118       |               |
+--------------------------------+-----------+------------------+-------+---------------------+--------------+-------------+---------------+
	
i. Do the two groups you chose to analyze have a different distribution of hours?

The 2-4 stars are all on Saturday, versus 4-5 stars are Saturday only. The 4-5 stars also include Mondays. 



ii. Do the two groups you chose to analyze have a different number of reviews?
         

The 2-3 star businesses have 234 reviews, while the 4-5 stars have 52 reviews
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.

With some knowledge of postal codes, we could see how they are grouped.

SQL code used for analysis:

select business.name
, business.city
, category.category
, business.stars
, hours.hours
, business.review_count
, business.postal_code,
neighborhood
from (business inner join category on business.id = category.business_id) inner join hours on hours.business_id = category.business_id
where business.city = 'Las Vegas' 
 group by business.stars ;

		
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1:
         
         
ii. Difference 2:
         
         
         
SQL code used for analysis:

	
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.


	
i. Indicate the type of analysis you chose to do:
         
   I will compare  the word "excellent" to stars in a review  
    
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:

I will search for the word "excellent" in a review. I will then see how the sum of stars compare for the use of word "excellent."
                           
                  
iii. Output of your finished dataset:
         
 +--------------+-------+
| sum_of_starz | stars |
+--------------+-------+
|           14 |     1 |
|           15 |     2 |
|           41 |     3 |
|          183 |     4 |
|          354 |     5 |
+--------------+-------+

        
iv. Provide the SQL code you used to create your final dataset:

select
count (stars) As sum_of_starz
,stars
from review
where text like '%excellent%'
group by stars

